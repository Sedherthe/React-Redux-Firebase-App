{"version":3,"sources":["components/layout/SignedInLinks.js","actions/authAction.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","reducers/projectReducer.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/DashBoard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","actions/projectActions.js","App.js","serviceWorker.js","reducers/authReducer.js","reducers/rootReducer.js","config/fb.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","activeClassName","onClick","profile","initials","SignedOutLinks","id","state","console","log","firebase","links","uid","style","position","Notifications","notifications","map","notification","key","user","content","moment","time","toDate","fromNow","initState","projects","title","projectReducer","action","project","err","ProjectSummary","author_first_name","author_last_name","createdAt","calendar","ProjectList","DashBoard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","SignUp","firstName","lastName","signUp","new_user","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","history","push","fireStore","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","authReducer","message","rootReducer","combineReducers","authRecuder","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.7776ff16.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../actions/authAction'\r\n\r\nfunction SignedInLinks(props){\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/create\" activeClassName=\"toto\">Create Project</NavLink></li> \r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to=\"/\" className=\"btn-floating light-red\">{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(() => {\r\n      dispatch({type: 'LOGIN_SUCCESS'});\r\n    }).catch((err) => {\r\n      dispatch({type: 'LOGIN_ERROR', err})\r\n    })\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signOut().then(()=>{\r\n      dispatch({type: 'SIGNOUT_SUCCESS'})\r\n    });\r\n  }\r\n}\r\n\r\nexport const signUp = (new_user) => {\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      new_user.email,\r\n      new_user.password\r\n    ).then((res) => {\r\n      // res contains data about the new user signed up and this returns a promise\r\n      return firestore.collection('users').doc(res.user.uid).set({\r\n        firstName: new_user.firstName,\r\n        lastName: new_user.lastName,\r\n        initials: new_user.firstName[0] + new_user.lastName[0]\r\n      })\r\n    }).then(() => {\r\n      dispatch({type: 'SIGNUP_SUCCESS'})\r\n    }).catch((err)=>{\r\n      dispatch({type: 'SIGNUP_ERROR', err})\r\n    })\r\n  }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction SignedOutLinks () {\r\n    return (\r\n      <ul id=\"nav-mobile\" className=\"right\">\r\n        <li><NavLink to=\"/SignIn\">Log In</NavLink></li>\r\n        <li><NavLink to=\"/SignUp\">Sign Up</NavLink></li>\r\n      </ul>\r\n    );\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux'\r\n\r\nconst  Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  console.log(\"auth is \", auth);\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks/>\r\n  return (\r\n\t\t<nav className=\"nav-wrapper grey darken-3 navbar\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<Link to=\"/\" className=\"brand-logo left\" style={{position: 'relative'}}>MarioPlan</Link>\r\n        { links }\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\r\nimport  moment  from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div>\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">Notifications</span>\r\n            <ul className=\"notifications\">\r\n              {\r\n                notifications && notifications.map(notification => {\r\n                  return (\r\n                    <li key={notification.id} className=\"section\">\r\n                      <span className=\"pink-text\">{notification.user}</span>\r\n                      <span>{notification.content}</span>\r\n                      <div className=\"grey-text note-date\">\r\n                        {moment(notification.time.toDate()).fromNow()}\r\n                      </div>\r\n                    </li>\r\n                  )\r\n                })\r\n              }              \r\n            </ul>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notifications;","const initState = {\r\n  projects: [\r\n    {id: '1', title: 'Machine Learning', content: 'blah blah blah haha'},\r\n    {id: '2', title: 'Deep Learning', content: 'blah blah blah haha'},\r\n    {id: '3', title: 'Artificial Intelligence', content: 'blah blah blah haha'},\r\n  ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT':\r\n      console.log(\"created project\", action.project);\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error', action.err);\r\n      return state;\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default projectReducer","import React from 'react'\r\nimport projectReducer from '../../reducers/projectReducer';\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = (props) => {\r\n  const {project} = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-2\">\r\n        <div className=\"card-content grey-text text-darken-3\">\r\n          <span className=\"card-title\">{props.project.title}</span>\r\n          <p className='grey-text'> Posted by {project.author_first_name} {project.author_last_name}</p>\r\n          <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n        </div>\r\n      </div>\r\n    </div> \r\n  );\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n      <div className=\"project-list\">\r\n        {\r\n          projects && projects.map(project => {\r\n            return (\r\n              <Link to={'/project/' + project.id}>\r\n                <ProjectSummary project={project} key={project.id}/>\r\n              </Link>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass DashBoard extends Component {\r\n\r\n  render(){\r\n    //console.log(this.props);\r\n    const { auth } = this.props;\r\n    const { projects, notifications } = this.props;\r\n    if(!auth.uid) return <Redirect to=\"SignIn\" />\r\n    return(\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m7\">\r\n            <ProjectList projects={projects}/>\r\n          </div>\r\n          <div className=\"col s12 m4 offset-m1\">\r\n            <Notifications notifications={notifications}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }   \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n  ])\r\n)(DashBoard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport moment  from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n  // const id = props.match.params.id;\r\n  // console.log(\"Id is \", id);\r\n  const { project } = props;\r\n  const { auth } = props;\r\n  if(!auth.uid) return <Redirect to=\"/SignIn\" />\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content left-align\">\r\n            <span className=\"card-title text-darken-3\">{ project.title }</span>\r\n            <p>{ project.content }</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 left-align\">\r\n            <div> Posted by { project.author_first_name } { project.author_last_name } </div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>  \r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container center-align\">\r\n        <p> Loading ............. </p>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    // what we want to attach to the props\r\n    project : project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {collection: 'projects'}\r\n  ])\r\n)(ProjectDetails)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../actions/authAction'\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n      email: '',\r\n      password: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n      this.setState({\r\n        [e.target.id]: e.target.value\r\n      })\r\n    } \r\n\r\n    handleSubmit = (e) => {\r\n      e.preventDefault(); // prevent default behaviour after submission\r\n      this.props.signIn(this.state);\r\n      console.log(this.state);\r\n    }\r\n\r\n    render(){\r\n      const { authError } = this.props;\r\n      const { auth } = this.props;\r\n      if(auth.uid) return <Redirect to=\"/\" />\r\n      return(\r\n        <div className=\"container\">\r\n          <form onSubmit={this.handleSubmit} className=\"White\">\r\n            <h5 className=\"left-align\">Sign In</h5>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input id=\"email\" type=\"email\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input id=\"password\" type=\"password\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <button className=\"btn blue lighten-2\">Login</button>\r\n              <div className=\"red-text center\">\r\n                { authError ? <p>{ authError }</p> : null}\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { signUp } from '../../actions/authAction'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n      email: '',\r\n      password: '',\r\n      firstName: '',\r\n      lastName: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n      this.setState({\r\n        [e.target.id]: e.target.value\r\n      })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n      e.preventDefault(); // prevent default behaviour after submission\r\n      console.log(\"new user is \", this.state);\r\n      this.props.signUp(this.state);\r\n    }\r\n\r\n    render(){\r\n      const { auth, authError } = this.props;\r\n      if(auth.uid) return <Redirect to=\"/\" />\r\n\r\n      return(\r\n        <div className=\"container\">\r\n          <form onSubmit={this.handleSubmit} className=\"White\">\r\n            <h5 className=\"left-align\">Sign Up</h5>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"firstName\">First Name</label>\r\n              <input id=\"firstName\" type=\"text\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"lastName\">Last Name</label>\r\n              <input id=\"lastName\" type=\"text\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input id=\"email\" type=\"email\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input id=\"password\" type=\"password\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <button className=\"btn blue lighten-2\">Sign Up</button>\r\n              <div className=\"red-text center\">\r\n                { authError ? <p>{ authError }</p> : null}\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (new_user) => dispatch(signUp(new_user))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../actions/projectActions'\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n      title: '',\r\n      content: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n      this.setState({\r\n        [e.target.id]: e.target.value\r\n      })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n      e.preventDefault(); // prevent default behaviour after submission\r\n      console.log(this.state);\r\n      this.props.createProject(this.state);\r\n      this.props.history.push('/')\r\n    }\r\n\r\n    render(){\r\n        const { auth } = this.props;\r\n        if(!auth.uid) return <Redirect to=\"SignIn\" />\r\n        return(\r\n          <div className=\"container\">\r\n            <form onSubmit={this.handleSubmit} className=\"White\">\r\n              <h5 className=\"left-align\">Create New Project</h5>\r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input id=\"title\" type=\"text\" onChange={this.handleChange}/>\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"content\"> Project Content</label>\r\n                <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}>\r\n                </textarea>\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <button className=\"btn blue lighten-2\">Create</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst maptStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth // For guarding the routes\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => {\r\n      dispatch(createProject(project))\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(maptStateToProps, mapDispatchToProps) (CreateProject)","export const createProject = (project) => {\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    // make async call to the database\r\n    const fireStore = getFirestore(); // gives us a ref to our firestore database\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    fireStore.collection('projects').add({\r\n      ...project, // this has project title and content\r\n      author_first_name: profile.firstName,\r\n      author_last_name: profile.lastName,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n    }).then(\r\n      // when promise is resolved \r\n      () => {\r\n        dispatch({type: 'CREATE_PROJECT', project})\r\n    }).catch((err) => {\r\n      dispatch({type: 'CREATE_PROJECT_ERROR', err})\r\n    })\r\n  }\r\n};","import React, {Component} from 'react';\nimport './App.css';\nimport { HashRouter, BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport DashBoard from './components/dashboard/DashBoard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render(){\n    return (\n      <HashRouter>\n        <div className=\"App\">\n          <Navbar/>\n          <Switch>\n            <Route exact path=\"/\">\n              <DashBoard/>\n            </Route>\n            <Route exact path=\"/project/:id\" component={ProjectDetails} />\n            <Route exact path=\"/SignIn\" component={SignIn} />\n            <Route exact path=\"/SignUp\" component={SignUp} />\n            <Route exact path=\"/create\" component={CreateProject} />\n         </Switch>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n  authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch(action.type) {\r\n    case 'LOGIN_ERROR':\r\n      console.log('login error');\r\n      return {\r\n        ...state,\r\n        authError: 'Login Failed'\r\n      }\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('Login Success')\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('Signout success')\r\n      return state;\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('Signup Success')\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case 'SIGNUP_ERROR':\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer","import authRecuder from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authRecuder,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer,\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCmFX0lhIZPBR3DM4E85S4bKjqjyLx-qh4\",\r\n  authDomain: \"marioplan-e9ab1.firebaseapp.com\",\r\n  databaseURL: \"https://marioplan-e9ab1.firebaseio.com\",\r\n  projectId: \"marioplan-e9ab1\",\r\n  storageBucket: \"marioplan-e9ab1.appspot.com\",\r\n  messagingSenderId: \"124824066890\",\r\n  appId: \"1:124824066890:web:61bc1d140ba2dbea937fb3\",\r\n  measurementId: \"G-JED5KSB3WW\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fb'\n\nconst store = createStore(\n  rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {\n      useFirestoreForProfile: true,\n      userProfile: 'users',\n      attachAuthIsReady: true\n    })\n  )\n);\n\nstore.firebaseAuthIsReady.then(()=>{\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App /> \n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n})\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}