{"version":3,"sources":["components/layout/SignedInLinks.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/DashBoard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","App.js","serviceWorker.js","index.js"],"names":["SignedInLinks","className","to","activeClassName","SignedOutLinks","id","Navbar","style","position","Notifications","ProjectSummary","ProjectList","DashBoard","Component","ProjectDetails","props","match","params","console","log","SignIn","state","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","onSubmit","this","htmlFor","type","onChange","SignUp","first_name","last_name","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bd104bc9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction SignedInLinks(){\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/\" activeClassName=\"toto\">Create Project</NavLink></li> \r\n            <li><NavLink to=\"/\">Log Out</NavLink></li>\r\n            <li><NavLink to=\"/\" className=\"btn-floating light-red\">SS</NavLink></li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default SignedInLinks;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction SignedOutLinks () {\r\n    return (\r\n      <ul id=\"nav-mobile\" className=\"right\">\r\n        <li><NavLink to=\"/\">Sign In</NavLink>Sign In</li>\r\n        <li><NavLink to=\"/\">Log In</NavLink></li>\r\n      </ul>\r\n    );\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\n\r\nconst  Navbar = () => {\r\n\treturn (\r\n\t\t<nav className=\"nav-wrapper grey darken-3 navbar\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<Link to=\"/\" className=\"brand-logo left\" style={{position: 'relative'}}>MarioPlan</Link>\r\n        <SignedInLinks/>\r\n        <SignedOutLinks/>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst Notifications = () => {\r\n    return (\r\n        <div>\r\n            <p className=\"text-darken-3\"> Notifications </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notifications;","import React from 'react'\r\n\r\nconst ProjectSummary = () => {\r\n    return (\r\n        <div className=\"section\">\r\n        <div className=\"card z-depth-1\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n            <span className=\"card-title\">Mario Project</span>\r\n            <p className=\"\"> This is about the first demo project!</p>\r\n            <p className=\"grey-text\">9th September, 2020</p>\r\n            </div>\r\n        </div>\r\n    </div> \r\n    );\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary'\r\n\r\nfunction ProjectList () {\r\n    return (\r\n      <div className=\"project-list\">\r\n        <ProjectSummary/>\r\n        <ProjectSummary/>\r\n        <ProjectSummary/>\r\n        <ProjectSummary/>\r\n        <ProjectSummary/>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\n\r\nclass DashBoard extends Component {\r\n    render(){\r\n      return(\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col s12 m6\">\r\n              <ProjectList/>\r\n            </div>\r\n            <div className=\"col s12 m5 offset-m1\">\r\n              <Notifications/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }   \r\n}\r\n\r\nexport default DashBoard;","import React from 'react'\r\n\r\nconst ProjectDetails = (props) => {\r\n  const id = props.match.params.id;\r\n  console.log(\"Id is \", id);\r\n  return (\r\n    <div className=\"container section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content left-align\">\r\n          <span className=\"card-title text-darken-3\">Project Title</span>\r\n          <p> Lorem Lorem Lorem Lorem Lorem Lorem Lorem Lorem Lorem Lorem Lorem Lorem Lorem Lorem Lorem Lorem Lorem Lorem Lorem Lorem Lorem Lorem Lorem Lorem Lorem Lorem Lorem Lorem </p>\r\n        </div>\r\n        <div className=\"card-action grey lighten-4 left-align\">\r\n          <div> Posted by Soma Siddhartha </div>\r\n          <div> 9th September, 2020 </div>\r\n        </div>\r\n      </div>\r\n    </div>  \r\n  );\r\n}\r\n\r\nexport default ProjectDetails","import React, { Component } from 'react';\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n      email: '',\r\n      password: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n      this.setState({\r\n        [e.target.id]: e.target.value\r\n      })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n      e.preventDefault(); // prevent default behaviour after submission\r\n      console.log(this.state);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n          <div className=\"container\">\r\n            <h5 className=\"left-align\">Sign In</h5>\r\n            <form onSubmit={this.handleSubmit} className=\"White\">\r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input id=\"email\" type=\"email\" onChange={this.handleChange}/>\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input id=\"password\" type=\"password\" onChange={this.handleChange}/>\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <button className=\"btn red lighten-1\">Login</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React, { Component } from 'react';\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n      email: '',\r\n      password: '',\r\n      first_name: '',\r\n      last_name: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n      this.setState({\r\n        [e.target.id]: e.target.value\r\n      })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n      e.preventDefault(); // prevent default behaviour after submission\r\n      console.log(this.state);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n          <div className=\"container\">\r\n            <h5 className=\"left-align\">Sign Up</h5>\r\n            <form onSubmit={this.handleSubmit} className=\"White\">\r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"first_name\">First Name</label>\r\n                <input id=\"first_name\" type=\"text\" onChange={this.handleChange}/>\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"last_name\">Last Name</label>\r\n                <input id=\"last_name\" type=\"text\" onChange={this.handleChange}/>\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input id=\"email\" type=\"email\" onChange={this.handleChange}/>\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input id=\"password\" type=\"password\" onChange={this.handleChange}/>\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <button className=\"btn red lighten-1\">Sign Up</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React, {Component} from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport DashBoard from './components/dashboard/DashBoard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\n\nclass App extends Component {\n  render(){\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar/>\n          <Switch>\n            <Route exact path=\"/\">\n              <DashBoard/>\n            </Route>\n            <Route exact path=\"/project/:id\" component={ProjectDetails}/>\n            <Route exact path=\"/SignIn\" component={SignIn}/>\n            <Route exact path=\"/SignUp\" component={SignUp} />\n         </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}